% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/qc.r
\name{qc}
\alias{qc}
\title{Cluster data}
\usage{
qc(dataset, sigma, steps = 21, min_d_factor = 2, n_clusters_max = 1000,
  verbose = FALSE)
}
\arguments{
\item{dataset}{The cleaned input data to be clustered in either data.frame or matrix format.  This should contain only numeric data and must not have any factors, strings, NAs, etc.  It also should not contain any irrelevant columns such as observation ID or redundant data.}

\item{sigma}{A double which controls how closely related data in clusters should be.  The smaller the number, more clusters will be created with fewer observations in each.  If sigma is too small, observations either will not be clustered or will be in their own individual clusters.  If sigma is too large, most -- if not all -- observations will be in the first cluster.}

\item{steps}{An integer specifying the number of expectation-maximization steps to take.  If faster, less accurate results are required, this may be reduced from the default of 21.}

\item{min_d_factor}{A double which controls how close data points must be in order to be considered in the same cluster.  Specifically, this value is the number of sigmas of distance to be within said threshold.  This value should probably not be changed unless there is a strong reason to do so.}

\item{n_clusters_max}{An integer specifying the maximum number of clusters to return.  These clusters will always be the most common clusters with the most observations in them.}

\item{verbose}{A boolean value which toggles the algorithm's verbosity for details as to how far along it is.}
}
\value{
The function returns a vector of the numeric clusters assigned to each row in \code{dataset}.
}
\description{
Cluster data using a non-linear clustering algorithm which finds organic groups of data from eigenfunctions and does not suffer from the curse of dimensionality.  The algorithm is approximately O(n^2).
}
\examples{
# Set up parallel execution
library(doMC)
registerDoMC(cores=2) # Replace `2` with the number of cores in your machine

data(iris)
iris_data <- iris[, -5] # Remove the classification of the iris data set
clusters <- qc(iris_data, 1.0)
secondary_cluster_rows <- which(clusters == 2)
print(iris[secondary_cluster_rows, ])
}

